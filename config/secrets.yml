# Be sure to restart your server when you modify this file.

# Your secret key is used for verifying the integrity of signed cookies.
# If you change this key, all old signed cookies will become invalid!

# Make sure the secret is at least 30 characters and all random,
# no regular words or you'll be exposed to dictionary attacks.
# You can use `rails secret` to generate a secure secret key.

# Make sure the secrets in this file are kept private
# if you're sharing your code publicly.

decidim_default: &decidim_default
  application_name: <%= Decidim::Env.new("DECIDIM_APPLICATION_NAME", "My Application Name").to_json %>
  mailer_sender: <%= Decidim::Env.new("DECIDIM_MAILER_SENDER", "change-me@example.org").to_s %>
  available_locales: <%= Decidim::Env.new("DECIDIM_AVAILABLE_LOCALES", "ca,cs,de,en,es,eu,fi,fr,it,ja,nl,pl,pt,ro").to_array.to_json %>
  default_locale: <%= Decidim::Env.new("DECIDIM_DEFAULT_LOCALE", "en").to_s %>
  force_ssl: <%= Decidim::Env.new("DECIDIM_FORCE_SSL", "auto").default_or_present_if_exists.to_s %>
  enable_html_header_snippets: <%= Decidim::Env.new("DECIDIM_ENABLE_HTML_HEADER_SNIPPETS").to_boolean_string %>
  currency_unit: <%= Decidim::Env.new("DECIDIM_CURRENCY_UNIT", "â‚¬").to_s %>
  cors_enabled: <%= Decidim::Env.new("DECIDIM_CORS_ENABLED").to_boolean_string %>
  image_uploader_quality: <%= Decidim::Env.new("DECIDIM_IMAGE_UPLOADER_QUALITY", "80").to_i %>
  maximum_attachment_size: <%= Decidim::Env.new("DECIDIM_MAXIMUM_ATTACHMENT_SIZE", "10").to_i %>
  maximum_avatar_size: <%= Decidim::Env.new("DECIDIM_MAXIMUM_AVATAR_SIZE", "5").to_i %>
  max_reports_before_hiding: <%= Decidim::Env.new("DECIDIM_MAX_REPORTS_BEFORE_HIDING", "3").to_i %>
  track_newsletter_links: <%= Decidim::Env.new("DECIDIM_TRACK_NEWSLETTER_LINKS", "auto").default_or_present_if_exists.to_s %>
  download_your_data_expiry_time: <%= Decidim::Env.new("DECIDIM_DOWNLOAD_YOUR_DATA_EXPIRY_TIME", "7").to_i %>
  throttling_max_requests: <%= Decidim::Env.new("DECIDIM_THROTTLING_MAX_REQUESTS", "100").to_i %>
  throttling_period: <%= Decidim::Env.new("DECIDIM_THROTTLING_PERIOD", "1").to_i %>
  unconfirmed_access_for: <%= Decidim::Env.new("DECIDIM_UNCONFIRMED_ACCESS_FOR", "0").to_i %>
  system_accesslist_ips: <%= Decidim::Env.new("DECIDIM_SYSTEM_ACCESSLIST_IPS").to_array.to_json %>
  base_uploads_path: <%= Decidim::Env.new("DECIDIM_BASE_UPLOADS_PATH").to_json %>
  default_csv_col_sep: <%= Decidim::Env.new("DECIDIM_DEFAULT_CSV_COL_SEP", ";").to_json %>
  consent_cookie_name: <%= Decidim::Env.new("DECIDIM_CONSENT_COOKIE_NAME", "decidim-consent").to_json %>
  cache_key_separator: <%= Decidim::Env.new("DECIDIM_CACHE_KEY_SEPARATOR", "/").to_json %>
  expire_session_after: <%= Decidim::Env.new("DECIDIM_EXPIRE_SESSION_AFTER", "30").to_i %>
  session_timeout_interval: <%= Decidim::Env.new("DECIDIM_SESSION_TIMEOUT_INTERVAL", "10").to_i %>
  enable_remember_me: <%= Decidim::Env.new("DECIDIM_ENABLE_REMEMBER_ME", "auto").default_or_present_if_exists.to_s %>
  follow_http_x_forwarded_host: <%= Decidim::Env.new("DECIDIM_FOLLOW_HTTP_X_FORWARDED_HOST").to_boolean_string %>
  maximum_conversation_message_length: <%= Decidim::Env.new("DECIDIM_MAXIMUM_CONVERSATION_MESSAGE_LENGTH", "1000").to_i %>
  password_blacklist: <%= Decidim::Env.new("DECIDIM_PASSWORD_BLACKLIST").to_array(separator: ", ").to_json %>
  allow_open_redirects: <%= Decidim::Env.new("DECIDIM_ALLOW_OPEN_REDIRECTS").to_boolean_string %>
  service_worker_enabled: <%= Decidim::Env.new("DECIDIM_SERVICE_WORKER_ENABLED", Rails.env.exclude?("development")).to_boolean_string %>
  admin_password:
    expiration_days: <%= Decidim::Env.new("DECIDIM_ADMIN_PASSWORD_EXPIRATION_DAYS", 90).to_i %>
    min_length: <%= Decidim::Env.new("DECIDIM_ADMIN_PASSWORD_MIN_LENGTH", 15).to_i %>
    repetition_times: <%= Decidim::Env.new("DECIDIM_ADMIN_PASSWORD_REPETITION_TIMES", 5).to_i %>
    strong: <%= Decidim::Env.new("DECIDIM_ADMIN_PASSWORD_STRONG", true).to_boolean_string %>
  api:
    schema_max_per_page: <%= Decidim::Env.new("API_SCHEMA_MAX_PER_PAGE", 50).to_i %>
    schema_max_complexity: <%= Decidim::Env.new("API_SCHEMA_MAX_COMPLEXITY", 5000).to_i %>
    schema_max_depth: <%= Decidim::Env.new("API_SCHEMA_MAX_DEPTH", 15).to_i %>
  proposals:
    similarity_threshold: <%= Decidim::Env.new("PROPOSALS_SIMILARITY_THRESHOLD", 0.25).to_f %>
    similarity_limit: <%= Decidim::Env.new("PROPOSALS_SIMILARITY_LIMIT", 10).to_i %>
    participatory_space_highlighted_proposals_limit: <%= Decidim::Env.new("PROPOSALS_PARTICIPATORY_SPACE_HIGHLIGHTED_PROPOSALS_LIMIT", 4).to_i %>
    process_group_highlighted_proposals_limit: <%= Decidim::Env.new("PROPOSALS_PROCESS_GROUP_HIGHLIGHTED_PROPOSALS_LIMIT", 3).to_i %>
  meetings:
    upcoming_meeting_notification: <%= Decidim::Env.new("MEETINGS_UPCOMING_MEETING_NOTIFICATION", 2).to_i %>
    enable_proposal_linking: <%= Decidim::Env.new("MEETINGS_ENABLE_PROPOSAL_LINKING", "auto").default_or_present_if_exists.to_s %>
    embeddable_services: <%= Decidim::Env.new("MEETINGS_EMBEDDABLE_SERVICES").to_array(separator: " ").to_json %>
  budgets:
    enable_proposal_linking: <%= Decidim::Env.new("BUDGETS_ENABLE_PROPOSAL_LINKING", "auto").default_or_present_if_exists.to_s %>
  accountability:
    enable_proposal_linking: <%= Decidim::Env.new("ACCOUNTABILITY_ENABLE_PROPOSAL_LINKING", "auto").default_or_present_if_exists.to_s %>
  consultations:
    stats_cache_expiration_time: <%= Decidim::Env.new("CONSULTATIONS_STATS_CACHE_EXPIRATION_TIME", 5).to_i %>
  initiatives:
    creation_enabled: <%= Decidim::Env.new("INITIATIVES_CREATION_ENABLED", "auto").default_or_present_if_exists.to_s %>
    similarity_threshold: <%= Decidim::Env.new("INITIATIVES_SIMILARITY_THRESHOLD", 0.25).to_f %>
    similarity_limit: <%= Decidim::Env.new("INITIATIVES_SIMILARITY_LIMIT", 5).to_i %>
    minimum_committee_members: <%= Decidim::Env.new("INITIATIVES_MINIMUM_COMMITTEE_MEMBERS", 2).to_i %>
    default_signature_time_period_length: <%= Decidim::Env.new("INITIATIVES_DEFAULT_SIGNATURE_TIME_PERIOD_LENGTH", 120).to_i %>
    default_components: <%= Decidim::Env.new("INITIATIVES_DEFAULT_COMPONENTS", "pages, meetings").to_array.to_json %>
    first_notification_percentage: <%= Decidim::Env.new("INITIATIVES_FIRST_NOTIFICATION_PERCENTAGE", 33).to_i %>
    second_notification_percentage: <%= Decidim::Env.new("INITIATIVES_SECOND_NOTIFICATION_PERCENTAGE", 66).to_i %>
    stats_cache_expiration_time: <%= Decidim::Env.new("INITIATIVES_STATS_CACHE_EXPIRATION_TIME", 5).to_i %>
    max_time_in_validating_state: <%= Decidim::Env.new("INITIATIVES_MAX_TIME_IN_VALIDATING_STATE", 60).to_i %>
    print_enabled: <%= Decidim::Env.new("INITIATIVES_PRINT_ENABLED", "auto").default_or_present_if_exists.to_s %>
    do_not_require_authorization: <%= Decidim::Env.new("INITIATIVES_DO_NOT_REQUIRE_AUTHORIZATION").to_boolean_string %>

storage_default: &storage_default
  provider: <%= Decidim::Env.new("STORAGE_PROVIDER", "local").to_s %>
  cdn_host: <%= ENV["STORAGE_CDN_HOST"] %>
  s3:
    access_key_id: <%= ENV["AWS_ACCESS_KEY_ID"] %>
    secret_access_key: <%= ENV["AWS_SECRET_ACCESS_KEY"] %>
    region: <%= ENV["AWS_REGION"] %>
    bucket: <%= ENV["AWS_BUCKET"] %>
    endpoint: <%= ENV["AWS_ENDPOINT"] %>
  azure:
    storage_access_key: <%= ENV["AZURE_STORAGE_ACCESS_KEY"] %>
    storage_account_name: <%= ENV["AZURE_STORAGE_ACCOUNT_NAME"] %>
    container: <%= ENV["AZURE_CONTAINER"] %>
  gcs:
    project: <%= ENV["GCS_PROJECT"] %>
    bucket: <%= ENV["GCS_BUCKET"] %>
    type: <%= Decidim::Env.new("GCS_TYPE", "service_account").to_s %>
    project_id: <%= Decidim::Env.new("GCS_PROJECT_ID").to_s %>
    private_key_id: <%= Decidim::Env.new("GCS_PRIVATE_KEY_ID").to_s %>
    private_key: <%= Decidim::Env.new("GCS_PRIVATE_KEY").to_s %>
    client_email: <%= Decidim::Env.new("GCS_CLIENT_EMAIL").to_s %>
    client_id: <%= Decidim::Env.new("GCS_CLIENT_ID").to_s %>
    auth_uri: <%= Decidim::Env.new("GCS_AUTH_URI", "https://accounts.google.com/o/oauth2/auth").to_s %>
    token_uri: <%= Decidim::Env.new("GCS_TOKEN_URI", "https://accounts.google.com/o/oauth2/token").to_s %>
    auth_provider_x509_cert_url: <%= Decidim::Env.new("GCS_AUTH_PROVIDER_X509_CERT_URL", "https://www.googleapis.com/oauth2/v1/certs").to_s %>
    client_x509_cert_url: <%= Decidim::Env.new("GCS_CLIENT_X509_CERT_URL").to_s %>

default: &default
  decidim:
    <<: *decidim_default
  storage:
    <<: *storage_default
  omniauth:
    facebook:
      # It must be a boolean. Remember ENV variables doesn't support booleans.
      enabled: false
      app_id: <%= ENV["OMNIAUTH_FACEBOOK_APP_ID"] %>
      app_secret: <%= ENV["OMNIAUTH_FACEBOOK_APP_SECRET"] %>
    twitter:
      enabled: false
      api_key: <%= ENV["OMNIAUTH_TWITTER_API_KEY"] %>
      api_secret: <%= ENV["OMNIAUTH_TWITTER_API_SECRET"] %>
    google_oauth2:
      enabled: false
      client_id: <%= ENV["OMNIAUTH_GOOGLE_CLIENT_ID"] %>
      client_secret: <%= ENV["OMNIAUTH_GOOGLE_CLIENT_SECRET"] %>
    idcat_mobil:
      enabled: true
      icon_path: media/images/idcat_mobil-icon.svg
      client_secret: <%= ENV["IDCAT_MOBIL_CLIENT_SECRET"] %>
      site: <%= ENV["IDCAT_MOBIL_SITE_URL"] %>
      client_id: <%= ENV["IDCAT_MOBIL_CLIENT_ID"] %>
  maps:
    here_api_key: <%= ENV["GEOCODER_LOOKUP_API_KEY"] %>
  vapid:
    enabled: <%= ENV["VAPID_ENABLED"] %>
  soda:
    domain: <%= ENV["SODA_DOMAIN"] %>
    username: <%= ENV["SODA_USERNAME"] %>
    password: <%= ENV["SODA_PASSWORD"] %>
    app_token: <%= ENV["SODA_APP_TOKEN"] %>
    dataset_identifier: <%= ENV["SODA_DATASET_IDENTIFIER"] %>
  algolia:
    id: <%= ENV['ALGOLIA_ID'] %>
    key: <%= ENV['ALGOLIA_KEY'] %>
    index: <%= ENV['ALGOLIA_INDEX'] %>

development:
  <<: *default
  secret_key_base: 5e7ab1484b23e9eaa6a57e823aa62ee625f1cf8c40b6567ec5b492d4d1d5019d1597b41d8a90616084c1b2a69a3e3b49b9fd5056bd6ca9159f7e2222acbbe023

test:
  <<: *default
  secret_key_base: ad54d279e805773efb0c87c23d15648b38eb39cd4ee49ef79ad98fb3b385024fdb110ec4a3b6096b87d37c2a9015a97be4bd7657cc28e31f2fdf71d5d18ec926
  omniauth:
    facebook:
      enabled: true
    twitter:
      enabled: true
    google_oauth2:
      enabled: true

servers: &servers
  <<: *default
  secret_key_base: <%= ENV['SECRET_KEY_BASE'] %>
  sendgrid: <%= !ENV["SENDGRID_USERNAME"].blank? %>
  smtp_username: <%= ENV["MAILER_SMTP_USER_NAME"] %>
  smtp_password: <%= ENV["MAILER_SMTP_PASSWORD"] %>
  smtp_address: <%= ENV["MAILER_SMTP_ADDRESS"] %>
  smtp_domain: <%= ENV["MAILER_SMTP_DOMAIN"] %>
  smtp_port: <%= ENV["MAILER_SMTP_PORT"] %>
  smtp_starttls_auto: true
  smtp_authentication: "login"

integration:
  <<: *servers

preprod:
  <<: *servers

# Do not keep production secrets in the repository,
# instead read values from the environment.
production:
  <<: *servers
